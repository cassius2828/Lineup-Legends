<!DOCTYPE html>
<html lang="en">
  <%- include('../partials/head.ejs') %>
  <body>
    <section id="create-lineup">
      <div class="left-container">
        <h1>Create a Lineup</h1>
        <div class="grid">
          <div class="row-container">
            <h2>$5</h2>
            <div class="row">
              <% value5Players.forEach(player => { %>
              <div class="player-container">
                <div class="cell">
                  <img
                    src="<%= player.imgUrl %>"
                    alt="Player"
                    data-player-id="<%= player._id %>"
                    data-value="5"
                  />
                </div>
                <div class="player-name">
                  <span><%= player.firstName %></span>
                  <span><%= player.lastName %></span>
                </div>
              </div>
              <% }); %>
            </div>
          </div>

          <div class="row-container">
            <h2>$4</h2>
            <div class="row">
              <% value4Players.forEach(player => { %>
              <div class="player-container">
                <div class="cell">
                  <img
                    src="<%= player.imgUrl %>"
                    alt="Player"
                    data-player-id="<%= player._id %>"
                    data-value="4"
                  />
                </div>
                <div class="player-name">
                  <span><%= player.firstName %></span>
                  <span><%= player.lastName %></span>
                </div>
              </div>
              <% }); %>
            </div>
          </div>

          <div class="row-container">
            <h2>$3</h2>
            <div class="row">
              <% value3Players.forEach(player => { %>
              <div class="player-container">
                <div class="cell">
                  <img
                    src="<%= player.imgUrl %>"
                    alt="Player"
                    data-player-id="<%= player._id %>"
                    data-value="3"
                  />
                </div>
                <div class="player-name">
                  <span><%= player.firstName %></span>
                  <span><%= player.lastName %></span>
                </div>
              </div>
              <% }); %>
            </div>
          </div>

          <div class="row-container">
            <h2>$2</h2>
            <div class="row">
              <% value2Players.forEach(player => { %>
              <div class="player-container">
                <div class="cell">
                  <img
                    src="<%= player.imgUrl %>"
                    alt="Player"
                    data-player-id="<%= player._id %>"
                    data-value="2"
                  />
                </div>
                <div class="player-name">
                  <span><%= player.firstName %></span>
                  <span><%= player.lastName %></span>
                </div>
              </div>
              <% }); %>
            </div>
          </div>

          <div class="row-container">
            <h2>$1</h2>
            <div class="row">
              <% value1Players.forEach(player => { %>
              <div class="player-container">
                <div class="cell">
                  <img
                    src="<%= player.imgUrl %>"
                    alt="Player"
                    data-player-id="<%= player._id %>"
                    data-value="1"
                  />
                </div>
                <div class="player-name">
                  <span><%= player.firstName %></span>
                  <span><%= player.lastName %></span>
                </div>
              </div>
              <% }); %>
            </div>
          </div>
        </div>
      </div>

      <div class="right-container">
        <div class="selected-players">
          <% for (let i = 0; i < 5; i++) { %>
          <div class="selected-cell"></div>
          <% } %>
        </div>
        <form id="lineupForm" action="/lineups/new" method="POST">
          <button type="submit" class="confirm-button">Confirm Lineup</button>
        </form>
      </div>
    </section>
    <script>
      const players = document.querySelectorAll(".player-container");
      const selectedCells = document.querySelectorAll(".selected-cell");
      const removePlayerBtns = document.querySelectorAll(".remove-player-btn");

      function confirmLineup() {
        document.getElementById("lineupForm").submit();
      }

      players.forEach((player) => {
        player.addEventListener("click", function (e) {
          addPlayerToLineupRow(this);
        });
      });

      function addPlayerToLineupRow(player) {
        // Get value of the player img src
        const imgEl = player.querySelector(".cell > img");
        const playerImg = imgEl.src;
        const playerId = imgEl.getAttribute("data-player-id");
        console.log(playerId);
        // Clone player to add to potential lineup
        const clonedPlayer = player.cloneNode(true);

        for (const cell of selectedCells) {
          // Find the value of the img in the lineup squares
          const selectedCellImg = cell.querySelector(
            ".player-container > .cell > img"
          )?.src;
          // Early return if one of the image src is found in the lineup to submit
          if (selectedCellImg === playerImg) return;
          // If the space is empty then proceed
          if (cell.innerHTML === "") {
            // Creating the remove player button
            const removePlayer = document.createElement("div");
            removePlayer.innerHTML = "<span>x</span>";
            cell.appendChild(removePlayer);
            removePlayer.classList.add("remove-player-btn");
            // create the hidden input for form submission
            const hiddenInput = document.createElement("input");
            hiddenInput.value = playerId;
            hiddenInput.type = "hidden";
            hiddenInput.name = "playerIds[]";
            // Add event listener to btn as it is created
            removePlayer.addEventListener("click", (e) => {
              e.stopPropagation();
              removePlayerFromLineupRow(player, cell, hiddenInput);
            });
            cell.style.border = "none";
            // Append a clone to preserve the player on the original grid
            cell.appendChild(clonedPlayer);
            // Set filters to indicate to user that the player has been selected
            player.classList.add("dim-player");

            document.getElementById("lineupForm").appendChild(hiddenInput);
            break;
          }
        }
      }

      // Remove player from potential lineup
      function removePlayerFromLineupRow(originalPlayer, cell, hiddenInput) {
        cell.innerHTML = "";
        originalPlayer.classList.remove("dim-player");
        hiddenInput.remove();
      }

      document
        .querySelector(".confirm-button")
        .addEventListener("click", confirmLineup);
    </script>
  </body>
</html>
